/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@300;

400;h1{font-size:2em}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}button{margin:0}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%}button,input{overflow:visible}optgroup,select,textarea{line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto;vertical-align:top}[type=checkbox],[type=radio]{padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.select option[value=""][disabled],[hidden],template{display:none}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,summary,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{border:0;padding:0;vertical-align:baseline;margin:0}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,video{display:inline-block}ul{list-style-type:none}a{background:0 0;text-decoration:none}button,input{line-height:normal;border:0}input[type=search]{-webkit-appearance:textfield}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}img{display:block;max-width:100%;height:auto}input:focus,textarea:focus{outline:0}input{margin:0;padding:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}.button{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:15px 40px;color:#fff;font-weight:500;font-size:13px;line-height:15px;border-radius:5px}.button:hover{cursor:pointer;color:#fff}.button_red{background-color:#d02624}.button_blue{background-color:#427cba}.input{padding:10px 46px 10px 15px;font-size:15px;line-height:25px;color:#000;background-color:#fff;border-radius:5px}.input ::-webkit-input-placeholder{font-size:15px;line-height:25px;color:#000;opacity:.4}.input :-moz-placeholder{font-size:15px;line-height:25px;color:#000;opacity:.4}.input ::-moz-placeholder{font-size:15px;line-height:25px;color:#000;opacity:.4}.input :-ms-input-placeholder{font-size:15px;line-height:25px;color:#000;opacity:.4}.input_search,.select{background-position:top 50% right 15px}.input_search{background:#fff url(../img/redesign/design/search.svg) no-repeat}.select{padding:10px 46px 10px 15px;font-size:15px;line-height:25px;background-color:#fff;border-radius:5px;background:#fff url(../img/redesign/design/arrow-down.svg) no-repeat;-moz-appearance:none;-webkit-appearance:none;appearance:none;outline:0;border:0}.select::-ms-expand{display:none}.select:invalid{color:#757575}.select option,.textarea{color:#000}.select.disabled{pointer-events:none;background-color:#f0f3f8;color:#909499}.textarea{padding:10px 20px;font-size:15px;line-height:25px;background-color:#fff;border-radius:5px}.textarea ::-webkit-input-placeholder{font-size:15px;line-height:25px;color:#000;opacity:.4}.textarea :-moz-placeholder{font-size:15px;line-height:25px;color:#000;opacity:.4}.textarea ::-moz-placeholder{font-size:15px;line-height:25px;color:#000;opacity:.4}.textarea :-ms-input-placeholder{font-size:15px;line-height:25px;color:#000;opacity:.4}.icon{width:100%;height:100%}.icon_black{fill:#141414}.icon_white{fill:#fff}.icon_primary{fill:#0e7bcf}.icon_secondary{fill:#015fa8}.icon_grey{fill:#c4c8cc}.icon_darkgrey{fill:#909499}.icon_lightgrey{fill:#e1e3e6}.icon_red{fill:#d6042a}.call-btn,.header__cart-popup .icon-circle .icon-circle__count{color:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.call-btn{z-index:1;position:fixed;text-align:left;padding:20px;font-weight:500;font-size:13px;line-height:15px;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);border-top-left-radius:5px;border-top-right-radius:5px;background-color:#427cba;top:460px;right:-57px;width:184px}.call-btn:hover{cursor:pointer}.call-btn p,.header{display:-webkit-box;display:-ms-flexbox;display:flex}.call-btn p{zoom:1.005}.call-btn p>img{margin-right:15px}.header{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;background-color:#fff;z-index:20}.header_sticky{position:fixed;width:100%}.header__cart-popup{z-index:99;visibility:hidden;opacity:0;-webkit-transition:.3s;-o-transition:.3s;transition:.3s;cursor:default;position:absolute;width:420px;background:#fff;border:1px solid #e1e3e6;border-radius:5px;-webkit-box-shadow:0 4px 16px rgba(0,0,0,.1);box-shadow:0 4px 16px rgba(0,0,0,.1);top:60px;right:-180px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:17px 20px 24px;text-align:center;color:#000;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.header__cart-popup::after,.header__cart-popup::before{content:"";position:absolute;height:12px;background-color:#fff}.header__cart-popup::before{top:-6px;right:60px;width:12px;-webkit-transform:translateX(-50%) rotate(45deg);-ms-transform:translateX(-50%) rotate(45deg);transform:translateX(-50%) rotate(45deg);border:1px solid #e1e3e6}.header__cart-popup::after{top:0;right:57px;width:20px;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.header-filters__popup p,.header__cart-popup p{margin:0 0 16px;font-size:12px;line-height:18px}.header__cart-popup .icon-circle{width:68px;height:68px;margin-bottom:16px;position:relative}.header__cart-popup .icon-circle .icon-circle__count{position:absolute;top:0;right:0;width:17px;height:17px;font-size:10px;font-weight:700;border-radius:100%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background-color:var(--button-primary)}.header__cart-popup .icon-circle .icon{width:30px;height:32px;margin:0}.header__cart-popup.active{visibility:visible;opacity:1}.header__cart-popup .link{cursor:pointer;text-decoration:underline;font-size:12px;font-weight:700;color:#026cbf}.header__cart-popup .link:not(:last-of-type){margin-bottom:16px}.header-nav__wrapper{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header-nav__logo-img{width:280px;height:80px}.header-nav__links{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header-nav__phone{font-size:20px;line-height:30px;font-weight:700;color:#000}.header-nav__phone_second{margin-left:30px}.header-nav__social{width:35px;height:35px;margin-left:5px}.header-nav__social_tlg{margin-left:30px}.header-nav__basket{width:116px;margin-left:40px;color:#000}.header-basket,.header-basket__count{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header-basket__count{position:absolute;top:-12px;left:10px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background-color:#ffdb5b;width:25px;height:25px;border-radius:25px}.header-basket__text{margin-left:16px;font-size:13px;line-height:15px;font-weight:500;color:#000}.header-filters{position:relative;top:0;padding:20px 0;background-color:#427cba}.header-filters_active{background-color:#fff}.header-filters_active .header-filters__wrapper{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.header-filters_active .header-filters__close{visibility:visible;opacity:1;display:-webkit-box;display:-ms-flexbox;display:flex}.header-filters__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header-filters__search-form{width:100%;max-width:270px}.header-filters__search-form_active{border-radius:0;border-bottom:1px solid #015fa8}.header-filters__search{width:100%}.header-filters__close{display:none;visibility:hidden;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;z-index:100;position:relative;right:-20px;margin-right:-70px;font-size:13px;line-height:20px;color:#909499;opacity:0;will-change:opacity;-webkit-transition:opacity .3s;-o-transition:opacity .3s;transition:opacity .3s}.header-filters__close .icon{min-width:14px;width:14px;height:14px;margin-right:8px}.header-filters__text{display:inline-block;margin:0 33px 0 30px;font-size:15px;line-height:25px;color:#fff}.header-filters__group{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;background-color:unset;width:100%}.header-filters__group-select{width:215px}.header-filters__group-btn{width:132px}.header-filters__popup{max-width:420px;z-index:99;visibility:hidden;opacity:0;-webkit-transition:.3s;-o-transition:.3s;transition:.3s;cursor:default;position:absolute;width:420px;background:#fff;top:128%;border:1px solid #e1e3e6;border-radius:5px;-webkit-box-shadow:0 4px 16px rgba(0,0,0,.1);box-shadow:0 4px 16px rgba(0,0,0,.1);right:auto;left:14%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:17px 20px 24px;text-align:center;color:#000;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.header-filters__popup::after,.header-filters__popup::before{content:"";position:absolute;right:auto;left:50%;height:12px;background-color:#fff}.header-filters__popup::before{top:-6px;width:12px;-webkit-transform:translateX(-50%) rotate(45deg);-ms-transform:translateX(-50%) rotate(45deg);transform:translateX(-50%) rotate(45deg);border:1px solid #e1e3e6}.header-filters__popup::after{top:0;width:20px;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.header-filters__popup .icon-circle{width:68px;height:68px;margin-bottom:16px;position:relative}.header-filters__popup .icon-circle .icon{width:35px;height:27px;margin:0}.header-filters__popup.active{visibility:visible;opacity:1}.header-filters__popup-title{font-size:16px;font-weight:500;margin-bottom:16px}.header-filters__popup .link{cursor:pointer;text-decoration:underline;font-size:12px;font-weight:700;color:#026cbf}.header-filters__popup .link:not(:last-of-type){margin-bottom:16px}.header-overlay{display:none;background-color:#fff;position:absolute;top:100%;left:0;height:680px;width:100%;z-index:-1;opacity:0}.header-overlay .overlay{position:fixed;top:680px;right:0;left:0;bottom:0;-webkit-backdrop-filter:blur(2px);backdrop-filter:blur(2px);background-color:#000;z-index:150;height:100vh;visibility:hidden}.header-overlay_active{display:block;z-index:98;opacity:1}.header-overlay_active .overlay{visibility:visible;opacity:.9}.header-overlay_active .header-overlay__result{opacity:1}.header-overlay__result{opacity:0;position:absolute;top:20px;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);left:50%;height:60%;width:100%;max-width:1200px;padding:0 15px}.header-overlay__result-wrap{overflow:auto;height:100%;max-width:42.5%;width:100%}.header-overlay__result-title{font-size:16px;font-weight:700;color:#141414;margin-bottom:8px}.header-overlay__result ul{list-style:none;margin:0;padding:0 0 20px}.header-overlay__result ul:last-of-type{padding-bottom:70px}.header-overlay__result ul li{line-height:12px}.header-overlay__result ul li:not(:last-of-type){margin-bottom:8px}.header-overlay__result ul li a{font-size:14px;line-height:20px;color:#141414;text-decoration:none;display:inline-block}.header-overlay__result ul li a:hover{color:#026cbf}.header-overlay__contact{position:absolute;width:100%;max-width:520px;top:0;right:15px;font-size:14px;line-height:20px;color:#141414}.header-overlay__contact-wrap{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-top:15px;font-size:15px;line-height:18px}.header-overlay__contact-wrap .icon{width:37px;height:42px;margin-right:16px}.header-overlay__contact-tel{font-size:24px;font-weight:700;color:#141414;text-decoration:none;display:inline-block}.header-overlay__contact-tel:hover{color:#026cbf}.spares{padding:92px 0 103px;background-image:url(../img/redesign/design/spares/bg.png);background-position:top 0 right 0;background-size:880px,500px;background-repeat:no-repeat}.spares__col,.spares__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.spares__wrapper{position:relative}.spares__col{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.spares__col_right{position:absolute;top:22px;left:466px}.spares__header{max-width:500px;font-weight:700;font-size:45px;line-height:55px;color:#000;margin-bottom:30px}.spares__subheader{max-width:205px;margin-bottom:40px;font-size:15px;line-height:25px;color:#000}.spares__button{padding:13px 30px 12px;width:250px;border-radius:10px}.spares__icon{display:inline-block;width:20px;height:20px;margin-right:10px}.spares__icon_last{margin-right:15px}
/*! Flickity v2.2.2
https://flickity.metafizzy.co
---------------------------------------------- */
.flickity-enabled{position:relative}.flickity-enabled:focus{outline:0}.flickity-viewport{overflow:hidden;position:relative;height:100%}.flickity-slider{position:absolute;width:100%;height:100%}.flickity-enabled.is-draggable{-webkit-tap-highlight-color:transparent;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.flickity-enabled.is-draggable .flickity-viewport{cursor:move;cursor:-webkit-grab;cursor:grab}.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down{cursor:-webkit-grabbing;cursor:grabbing}.flickity-button{position:absolute;background:rgba(255,255,255,.75);border:0;color:#333}.flickity-button:hover{background:#fff;cursor:pointer}.flickity-button:focus{outline:0;-webkit-box-shadow:0 0 0 5px #19f;box-shadow:0 0 0 5px #19f}.flickity-button:active{opacity:.6}.flickity-button:disabled{opacity:.3;cursor:auto;pointer-events:none}.flickity-button-icon{fill:currentColor}.flickity-prev-next-button{top:50%;width:44px;height:44px;border-radius:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.flickity-prev-next-button.previous{left:10px}.flickity-prev-next-button.next{right:10px}.flickity-rtl .flickity-prev-next-button.previous{left:auto;right:10px}.flickity-rtl .flickity-prev-next-button.next{right:auto;left:10px}.flickity-prev-next-button .flickity-button-icon{position:absolute;left:20%;top:20%;width:60%;height:60%}.flickity-page-dots{position:absolute;width:100%;bottom:-25px;padding:0;margin:0;list-style:none;text-align:center;line-height:1}.flickity-rtl .flickity-page-dots{direction:rtl}.flickity-page-dots .dot{display:inline-block;width:10px;height:10px;margin:0 8px;background:#333;border-radius:50%;opacity:.25;cursor:pointer}.flickity-page-dots .dot.is-selected{opacity:1}.guarantee{padding:54px 0 35px}.guarantee .flickity-viewport{height:400px!important}.guarantee-item{display:-webkit-box;display:-ms-flexbox;display:flex;border-radius:10px;background-color:#f1fafe}.guarantee-item.carousel-cell{width:100%;height:400px}.guarantee-item__img{-o-object-fit:contain;object-fit:contain;max-width:670px;width:100%;-ms-flex-negative:0;flex-shrink:0}.guarantee-item__content{padding:55px 58px 55px 60px;width:100%}.guarantee-item__title{font-weight:700;font-size:30px;line-height:35px;color:#000;margin-bottom:25px}.guarantee-item__text{font-size:15px;line-height:25px;color:#000;margin-bottom:60px}.guarantee-item__buttons{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.guarantee-item__btn{width:173px;border-radius:10px}.guarantee-item__arrows{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:64px}.guarantee-item__arrow{width:24px;height:24px}.guarantee-item__arrow:hover{cursor:pointer;opacity:.6}.guarantee-item__arrow_left{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.guarantee-item__arrow_disabled{opacity:.4;pointer-events:none}.why{padding:85px 0}.why__left,.why__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.why__left{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:270px;min-width:270px;margin-right:132px}.why__header{font-weight:700;font-size:30px;line-height:35px;color:#000;margin-bottom:25px}.why__subheader{font-size:15px;line-height:25px;color:#000}.why__right{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}.why__right,.why__right-col,.why__right-item{display:-webkit-box;display:-ms-flexbox;display:flex}.why__right-col{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:170px}.why__right-item{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:75px}.why__right-item:last-child{margin-bottom:0}.why__right-icon{width:32px;height:32px;margin-right:25px;margin-top:10px}.why__right-text{font-weight:500;font-size:15px;line-height:25px;color:#000}.contacts{position:relative;padding:82px 0 108px}.contacts__bg{background-image:url(../img/redesign/design/iphone.png);background-position:top 0 right 50%;background-size:634px,500px;background-repeat:no-repeat;width:634px;height:500px;top:0;left:calc(50% - 361px);position:absolute;pointer-events:none}.contacts__col,.contacts__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.contacts__wrapper{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:60px 50px;background-color:#427cba;border-radius:10px}.contacts__col{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.contacts__col_left{width:270px;padding-top:11px}.contacts__header{margin-bottom:25px;font-weight:700;font-size:30px;line-height:35px;color:#fff}.contacts__subheader{font-size:15px;line-height:25px;color:#fff}.contacts__form{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.contacts__message,.contacts__phone{width:370px}.contacts__message{height:90px;margin-bottom:20px;resize:none}.contacts__phone,.modal .title{margin-bottom:20px}.contacts__btn{width:191px}.map{width:100%;height:300px}.footer{padding:41px 0}.footer__list{display:-webkit-box;display:-ms-flexbox;display:flex}.footer__item{width:25%}.footer-item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.footer-item__copyright,.footer-item__mail,.footer-item__phone{font-size:15px;line-height:25px;color:#000}.footer-item__mail,.footer-item__phone{font-weight:700}.footer-item__phone{margin-bottom:10px}.footer-item__socials{display:-webkit-box;display:-ms-flexbox;display:flex}.footer-item__social{width:25px;height:25px;margin-right:5px}.footer-item__address,.footer-item__name{font-size:15px;line-height:25px;color:#000}.footer-item__name{opacity:.6;margin-bottom:23px}.footer-item__address{font-weight:700}.modal{position:fixed;top:0;bottom:0;right:0;left:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;z-index:11111;display:none}.modal .title{font-size:23px;font-weight:400;line-height:34px;width:100%}.modal .title_modal{font-size:20px;font-weight:500;text-align:center}.modal .text{margin-bottom:4px;font-size:23px;font-weight:400;line-height:34px}.modal .subtitle{font-size:14px;margin-bottom:20px}.modal .subtitle_modal{text-align:center}.modal .form .error__text{color:#ed2c2c;line-height:20px;margin-top:4px}.modal .form__group:not(:last-of-type){margin-bottom:20px}.modal .form__group.error .modal .form__input{border-color:#ed2c2c;background-color:#fff2f2}.modal .form__group.disabled .modal .form__label{color:#909499}.modal .form__group.disabled .modal .form__input{pointer-events:none;color:#909499;background-color:#f0f3f8}.modal .form__group.disabled .modal .form__input::-webkit-input-placeholder{color:#c4c8cc}.modal .form__group.disabled .modal .form__input::-moz-placeholder{color:#c4c8cc}.modal .form__group.disabled .modal .form__input:-ms-input-placeholder{color:#c4c8cc}.modal .form__group.disabled .modal .form__input::-ms-input-placeholder{color:#c4c8cc}.modal .form__group.disabled .modal .form__input::placeholder{color:#c4c8cc}.modal .form__label{margin-bottom:4px;font-size:12px;display:block;text-align:left}.modal .form__input{border:1px solid #e1e3e6;border-radius:5px;padding:15px 14px;width:100%}.modal .form__input:focus{border-color:#c4c8cc}.modal .form__input::-webkit-input-placeholder{color:#909499}.modal .form__input::-moz-placeholder{color:#909499}.modal .form__input:-ms-input-placeholder{color:#909499}.modal .form__input::-ms-input-placeholder{color:#909499}.modal .form__input::placeholder{color:#909499}.modal .form__textarea{border:1px solid #e1e3e6;border-radius:5px;padding:16px 14px;resize:none;width:100%;min-height:100px}.modal .form__textarea:focus{outline:0}.modal .form__info{display:block;margin-top:4px;color:#909499}.modal .form__checkbox{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;min-height:20px;text-align:left}.modal .form__checkbox label{padding-left:28px;z-index:1;cursor:pointer}.modal .form__checkbox span{font-size:12px}.modal .form__checkbox a{text-decoration:underline;display:inline;color:#141414}.modal .form__checkbox a:hover{color:#026cbf}.modal .form__checkbox input{display:none}.modal .form__checkbox input+.form__checkbox-mark{position:absolute;top:0;left:0;content:"";width:20px;height:20px;border:1px solid #e1e3e6;margin-right:8px;border-radius:5px}.modal .form__checkbox input:checked+.form__checkbox-mark{border-color:#015fa8;background-color:#015fa8}.modal .form__checkbox input:checked+.form__checkbox-mark::before{position:absolute;content:"";width:5px;top:9px;left:4px;height:2px;background-color:#fff;-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.modal .form__checkbox input:checked+.form__checkbox-mark::after{width:10px;height:2px;top:8px;left:6px;-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg);position:absolute;content:"";background-color:#fff}.modal .form__button{width:100%;margin-top:20px;font-size:13px;height:56px}.modal .form__back{display:block;text-align:center;font-weight:700;margin-top:20px;text-decoration:underline;font-size:14px;line-height:16px;color:#015fa8}.modal .form__order{margin-bottom:24px}.modal .form__order-title{font-size:17px;font-weight:600;margin-bottom:12px}.modal .form__order__item{padding:5px 17px;border-left:5px solid #f0f3f8;font-size:14px}.modal .form__order__item:not(:last-of-type){margin-bottom:16px}.modal .form__order__item-name{font-weight:600}.modal .form__order__item-code,.modal .form__order__item-model{color:#909499;margin-top:4px;white-space:nowrap;-o-text-overflow:ellipsis;text-overflow:ellipsis;overflow:hidden}.modal .form__order__item-price{margin-top:4px}.modal__wrap{position:relative;max-width:1100px;width:100%;height:100%;max-height:80vh;z-index:11000;margin:20px 130px;display:none}.modal__content{padding:60px 30px;overflow:auto;height:auto;width:100%;border:1px solid #e1e3e6;-webkit-box-shadow:0 4px 16px rgba(0,0,0,.1);box-shadow:0 4px 16px rgba(0,0,0,.1);background-color:#fff;border-radius:5px;text-align:center}.modal__overlay{position:fixed;top:0;bottom:0;right:0;left:0;z-index:10000;-webkit-backdrop-filter:blur(2px);backdrop-filter:blur(2px);background-color:#141414;opacity:.3;display:none}.modal__close{display:-webkit-box;display:-ms-flexbox;display:flex;font-size:12px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;position:absolute;top:-60px;right:0;width:120px;height:46px;background:rgba(0,0,0,.3);border-radius:5px;padding-left:50px;color:#fff}.modal__close:after,.modal__close:before{top:50%;left:15px;-webkit-transform:translateY(-50%) rotate(45deg);-ms-transform:translateY(-50%) rotate(45deg);transform:translateY(-50%) rotate(45deg);content:"";position:absolute;width:14px;height:2px;background-color:#fff}.modal__close:after{left:21px;width:2px;height:14px}.modal_main .modal__wrap{max-width:530px;height:auto}.modal [data-modal=contacts] .header__buttons::before{display:none}body,html{-webkit-overflow-scrolling:touch}body.lock,html.lock{overflow:hidden;height:100vh}body{position:relative;font-family:Roboto,"Helvetica Neue",sans-serif}main{padding-top:165px}.content-wrapper{max-width:1170px;margin:0 auto}.icon-circle{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin:0 auto 24px;background-color:#f0f3f8;border-radius:100%;width:100px;height:100px}.icon-circle .icon{height:55px}@media print{@page{margin:1cm}body{background:#fff;color:#000}a,blockquote,pre,table{page-break-inside:avoid}dl,ol,ul{page-break-before:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */